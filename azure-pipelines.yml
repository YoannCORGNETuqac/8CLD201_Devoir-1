# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: default


variables:
# subscription details
  azureSubscription: '8CLC201 Subscription(6aac11fe-e7b3-480d-9647-a414e649ab81)'
  azureSubscriptionID : '6aac11fe-e7b3-480d-9647-a414e649ab81'
# Key Vault info
  keyVaultResourceGroupName : 'KeyVaultResourceGroup'
  keyVaultName : 'KeyVault-Devoir1-1'
  projectFolder : 'Storage'
# global config
  location : 'East US'
  secretName: 'adminPassword'

jobs:
  - job: AzureKeyVault
    steps:
      # deploy the azure Key Vault
      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Deploying Azure KeyVAult
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: '$(azureSubscription)'
          subscriptionId: '$(azureSubscriptionID)'
          action: 'Create Or Update Resource Group'
          resourceGroupName: $(keyVaultResourceGroupName)
          location: $(location)
          templateLocation: 'Linked artifact'
          csmFile: '$(Build.SourcesDirectory)\$(projectFolder)\azuredeploy.json'
          csmParametersFile: '$(Build.SourcesDirectory)\$(projectFolder)\azuredeploy.parameters.json'
          overrideParameters: '-name $(keyVaultName) -secretName $(secretName) -secretValue $(adminPassword)'
          deploymentMode: 'Incremental'
          deploymentOutputs: 'KeyVaultDeployment'
      
      - task: AzureCLI@2
        inputs:
          azureSubscription: $(azureSubscription)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az keyvault secret set --vault-name $(keyVaultName) --name $(secretName) --value $(adminPassword)

      # extract the admin password for the VMs
      - task: AzureKeyVault@2
        displayName: Get Secret
        inputs:
          azureSubscription: '$(azureSubscription)'
          KeyVaultName: '$(keyVaultName)'
          SecretsFilter: '$(secretName)'
          RunAsPreJob: false

